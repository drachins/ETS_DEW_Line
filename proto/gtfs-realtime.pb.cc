// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime.proto

#include "gtfs-realtime.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace transit_realtime {

inline constexpr VehicleDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        license_plate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR VehicleDescriptor::VehicleDescriptor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleDescriptorDefaultTypeInternal() {}
  union {
    VehicleDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleDescriptorDefaultTypeInternal _VehicleDescriptor_default_instance_;

inline constexpr TripUpdate_StopTimeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{::int64_t{0}},
        delay_{0},
        uncertainty_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TripUpdate_StopTimeEvent::TripUpdate_StopTimeEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TripUpdate_StopTimeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TripUpdate_StopTimeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TripUpdate_StopTimeEventDefaultTypeInternal() {}
  union {
    TripUpdate_StopTimeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TripUpdate_StopTimeEventDefaultTypeInternal _TripUpdate_StopTimeEvent_default_instance_;

inline constexpr TripDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trip_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        route_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        schedule_relationship_{static_cast< ::transit_realtime::TripDescriptor_ScheduleRelationship >(0)},
        direction_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TripDescriptor::TripDescriptor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TripDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TripDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TripDescriptorDefaultTypeInternal() {}
  union {
    TripDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TripDescriptorDefaultTypeInternal _TripDescriptor_default_instance_;

inline constexpr TranslatedString_Translation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        language_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR TranslatedString_Translation::TranslatedString_Translation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TranslatedString_TranslationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TranslatedString_TranslationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TranslatedString_TranslationDefaultTypeInternal() {}
  union {
    TranslatedString_Translation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TranslatedString_TranslationDefaultTypeInternal _TranslatedString_Translation_default_instance_;

inline constexpr TimeRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_{::uint64_t{0u}},
        end_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR TimeRange::TimeRange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeRangeDefaultTypeInternal() {}
  union {
    TimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeRangeDefaultTypeInternal _TimeRange_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        latitude_{0},
        longitude_{0},
        odometer_{0},
        bearing_{0},
        speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr FeedHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gtfs_realtime_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        incrementality_{static_cast< ::transit_realtime::FeedHeader_Incrementality >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR FeedHeader::FeedHeader(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedHeaderDefaultTypeInternal() {}
  union {
    FeedHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedHeaderDefaultTypeInternal _FeedHeader_default_instance_;

inline constexpr VehiclePosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stop_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trip_{nullptr},
        position_{nullptr},
        vehicle_{nullptr},
        current_stop_sequence_{0u},
        congestion_level_{static_cast< ::transit_realtime::VehiclePosition_CongestionLevel >(0)},
        timestamp_{::uint64_t{0u}},
        occupancy_status_{static_cast< ::transit_realtime::VehiclePosition_OccupancyStatus >(0)},
        current_status_{static_cast< ::transit_realtime::VehiclePosition_VehicleStopStatus >(2)} {}

template <typename>
PROTOBUF_CONSTEXPR VehiclePosition::VehiclePosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehiclePositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehiclePositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehiclePositionDefaultTypeInternal() {}
  union {
    VehiclePosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehiclePositionDefaultTypeInternal _VehiclePosition_default_instance_;

inline constexpr TripUpdate_StopTimeUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stop_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        arrival_{nullptr},
        departure_{nullptr},
        stop_sequence_{0u},
        schedule_relationship_{static_cast< ::transit_realtime::TripUpdate_StopTimeUpdate_ScheduleRelationship >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TripUpdate_StopTimeUpdate::TripUpdate_StopTimeUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TripUpdate_StopTimeUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TripUpdate_StopTimeUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TripUpdate_StopTimeUpdateDefaultTypeInternal() {}
  union {
    TripUpdate_StopTimeUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TripUpdate_StopTimeUpdateDefaultTypeInternal _TripUpdate_StopTimeUpdate_default_instance_;

inline constexpr TranslatedString::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : translation_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TranslatedString::TranslatedString(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TranslatedStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TranslatedStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TranslatedStringDefaultTypeInternal() {}
  union {
    TranslatedString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TranslatedStringDefaultTypeInternal _TranslatedString_default_instance_;

inline constexpr EntitySelector::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agency_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        route_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stop_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trip_{nullptr},
        route_type_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntitySelector::EntitySelector(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntitySelectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntitySelectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntitySelectorDefaultTypeInternal() {}
  union {
    EntitySelector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntitySelectorDefaultTypeInternal _EntitySelector_default_instance_;

inline constexpr TripUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stop_time_update_{},
        trip_{nullptr},
        vehicle_{nullptr},
        timestamp_{::uint64_t{0u}},
        delay_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TripUpdate::TripUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TripUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TripUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TripUpdateDefaultTypeInternal() {}
  union {
    TripUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TripUpdateDefaultTypeInternal _TripUpdate_default_instance_;

inline constexpr Alert::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        active_period_{},
        informed_entity_{},
        url_{nullptr},
        header_text_{nullptr},
        description_text_{nullptr},
        cause_{static_cast< ::transit_realtime::Alert_Cause >(1)},
        effect_{static_cast< ::transit_realtime::Alert_Effect >(8)} {}

template <typename>
PROTOBUF_CONSTEXPR Alert::Alert(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AlertDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlertDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlertDefaultTypeInternal() {}
  union {
    Alert _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlertDefaultTypeInternal _Alert_default_instance_;

inline constexpr FeedEntity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trip_update_{nullptr},
        vehicle_{nullptr},
        alert_{nullptr},
        is_deleted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR FeedEntity::FeedEntity(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedEntityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedEntityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedEntityDefaultTypeInternal() {}
  union {
    FeedEntity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedEntityDefaultTypeInternal _FeedEntity_default_instance_;

inline constexpr FeedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_{},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FeedMessage::FeedMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FeedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedMessageDefaultTypeInternal() {}
  union {
    FeedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedMessageDefaultTypeInternal _FeedMessage_default_instance_;
}  // namespace transit_realtime
static ::_pb::Metadata file_level_metadata_gtfs_2drealtime_2eproto[15];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_gtfs_2drealtime_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_gtfs_2drealtime_2eproto = nullptr;
const ::uint32_t TableStruct_gtfs_2drealtime_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedMessage, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedMessage, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedMessage, _impl_.header_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedMessage, _impl_.entity_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedHeader, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedHeader, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedHeader, _impl_.gtfs_realtime_version_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedHeader, _impl_.incrementality_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedHeader, _impl_.timestamp_),
    0,
    2,
    1,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_.is_deleted_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_.trip_update_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_.vehicle_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::FeedEntity, _impl_.alert_),
    0,
    4,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeEvent, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeEvent, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeEvent, _impl_.delay_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeEvent, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeEvent, _impl_.uncertainty_),
    1,
    0,
    2,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_.stop_sequence_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_.stop_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_.arrival_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_.departure_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate_StopTimeUpdate, _impl_.schedule_relationship_),
    3,
    0,
    1,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_.trip_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_.vehicle_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_.stop_time_update_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripUpdate, _impl_.delay_),
    0,
    1,
    ~0u,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.trip_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.vehicle_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.current_stop_sequence_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.stop_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.current_status_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.congestion_level_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehiclePosition, _impl_.occupancy_status_),
    1,
    3,
    2,
    4,
    0,
    8,
    6,
    5,
    7,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.active_period_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.informed_entity_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.cause_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.effect_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.header_text_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Alert, _impl_.description_text_),
    ~0u,
    ~0u,
    3,
    4,
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TimeRange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TimeRange, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TimeRange, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TimeRange, _impl_.start_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TimeRange, _impl_.end_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_.latitude_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_.bearing_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_.odometer_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::Position, _impl_.speed_),
    0,
    1,
    3,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_.trip_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_.route_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_.direction_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_.start_time_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_.start_date_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TripDescriptor, _impl_.schedule_relationship_),
    0,
    3,
    5,
    1,
    2,
    4,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehicleDescriptor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehicleDescriptor, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehicleDescriptor, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehicleDescriptor, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehicleDescriptor, _impl_.label_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::VehicleDescriptor, _impl_.license_plate_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_.agency_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_.route_id_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_.route_type_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_.trip_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::EntitySelector, _impl_.stop_id_),
    0,
    1,
    4,
    3,
    2,
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString_Translation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString_Translation, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString_Translation, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString_Translation, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString_Translation, _impl_.language_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString, _internal_metadata_),
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString, _impl_._extensions_),
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transit_realtime::TranslatedString, _impl_.translation_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::transit_realtime::FeedMessage)},
        {12, 23, -1, sizeof(::transit_realtime::FeedHeader)},
        {26, 39, -1, sizeof(::transit_realtime::FeedEntity)},
        {44, 55, -1, sizeof(::transit_realtime::TripUpdate_StopTimeEvent)},
        {58, 71, -1, sizeof(::transit_realtime::TripUpdate_StopTimeUpdate)},
        {76, 89, -1, sizeof(::transit_realtime::TripUpdate)},
        {94, 111, -1, sizeof(::transit_realtime::VehiclePosition)},
        {120, 135, -1, sizeof(::transit_realtime::Alert)},
        {142, 152, -1, sizeof(::transit_realtime::TimeRange)},
        {154, 167, -1, sizeof(::transit_realtime::Position)},
        {172, 186, -1, sizeof(::transit_realtime::TripDescriptor)},
        {192, 203, -1, sizeof(::transit_realtime::VehicleDescriptor)},
        {206, 219, -1, sizeof(::transit_realtime::EntitySelector)},
        {224, 234, -1, sizeof(::transit_realtime::TranslatedString_Translation)},
        {236, -1, -1, sizeof(::transit_realtime::TranslatedString)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::transit_realtime::_FeedMessage_default_instance_._instance,
    &::transit_realtime::_FeedHeader_default_instance_._instance,
    &::transit_realtime::_FeedEntity_default_instance_._instance,
    &::transit_realtime::_TripUpdate_StopTimeEvent_default_instance_._instance,
    &::transit_realtime::_TripUpdate_StopTimeUpdate_default_instance_._instance,
    &::transit_realtime::_TripUpdate_default_instance_._instance,
    &::transit_realtime::_VehiclePosition_default_instance_._instance,
    &::transit_realtime::_Alert_default_instance_._instance,
    &::transit_realtime::_TimeRange_default_instance_._instance,
    &::transit_realtime::_Position_default_instance_._instance,
    &::transit_realtime::_TripDescriptor_default_instance_._instance,
    &::transit_realtime::_VehicleDescriptor_default_instance_._instance,
    &::transit_realtime::_EntitySelector_default_instance_._instance,
    &::transit_realtime::_TranslatedString_Translation_default_instance_._instance,
    &::transit_realtime::_TranslatedString_default_instance_._instance,
};
const char descriptor_table_protodef_gtfs_2drealtime_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023gtfs-realtime.proto\022\020transit_realtime\""
    "u\n\013FeedMessage\022,\n\006header\030\001 \002(\0132\034.transit"
    "_realtime.FeedHeader\022,\n\006entity\030\002 \003(\0132\034.t"
    "ransit_realtime.FeedEntity*\n\010\350\007\020\320\017\032\002\030\001\"\323"
    "\001\n\nFeedHeader\022\035\n\025gtfs_realtime_version\030\001"
    " \002(\t\022Q\n\016incrementality\030\002 \001(\0162+.transit_r"
    "ealtime.FeedHeader.Incrementality:\014FULL_"
    "DATASET\022\021\n\ttimestamp\030\003 \001(\004\"4\n\016Incrementa"
    "lity\022\020\n\014FULL_DATASET\020\000\022\020\n\014DIFFERENTIAL\020\001"
    "*\n\010\350\007\020\320\017\032\002\030\001\"\316\001\n\nFeedEntity\022\n\n\002id\030\001 \002(\t\022"
    "\031\n\nis_deleted\030\002 \001(\010:\005false\0221\n\013trip_updat"
    "e\030\003 \001(\0132\034.transit_realtime.TripUpdate\0222\n"
    "\007vehicle\030\004 \001(\0132!.transit_realtime.Vehicl"
    "ePosition\022&\n\005alert\030\005 \001(\0132\027.transit_realt"
    "ime.Alert*\n\010\350\007\020\320\017\032\002\030\001\"\246\005\n\nTripUpdate\022.\n\004"
    "trip\030\001 \002(\0132 .transit_realtime.TripDescri"
    "ptor\0224\n\007vehicle\030\003 \001(\0132#.transit_realtime"
    ".VehicleDescriptor\022E\n\020stop_time_update\030\002"
    " \003(\0132+.transit_realtime.TripUpdate.StopT"
    "imeUpdate\022\021\n\ttimestamp\030\004 \001(\004\022\r\n\005delay\030\005 "
    "\001(\005\032M\n\rStopTimeEvent\022\r\n\005delay\030\001 \001(\005\022\014\n\004t"
    "ime\030\002 \001(\003\022\023\n\013uncertainty\030\003 \001(\005*\n\010\350\007\020\320\017\032\002"
    "\030\001\032\355\002\n\016StopTimeUpdate\022\025\n\rstop_sequence\030\001"
    " \001(\r\022\017\n\007stop_id\030\004 \001(\t\022;\n\007arrival\030\002 \001(\0132*"
    ".transit_realtime.TripUpdate.StopTimeEve"
    "nt\022=\n\tdeparture\030\003 \001(\0132*.transit_realtime"
    ".TripUpdate.StopTimeEvent\022j\n\025schedule_re"
    "lationship\030\005 \001(\0162@.transit_realtime.Trip"
    "Update.StopTimeUpdate.ScheduleRelationsh"
    "ip:\tSCHEDULED\"\?\n\024ScheduleRelationship\022\r\n"
    "\tSCHEDULED\020\000\022\013\n\007SKIPPED\020\001\022\013\n\007NO_DATA\020\002*\n"
    "\010\350\007\020\320\017\032\002\030\001*\n\010\350\007\020\320\017\032\002\030\001\"\344\006\n\017VehiclePositi"
    "on\022.\n\004trip\030\001 \001(\0132 .transit_realtime.Trip"
    "Descriptor\0224\n\007vehicle\030\010 \001(\0132#.transit_re"
    "altime.VehicleDescriptor\022,\n\010position\030\002 \001"
    "(\0132\032.transit_realtime.Position\022\035\n\025curren"
    "t_stop_sequence\030\003 \001(\r\022\017\n\007stop_id\030\007 \001(\t\022Z"
    "\n\016current_status\030\004 \001(\01623.transit_realtim"
    "e.VehiclePosition.VehicleStopStatus:\rIN_"
    "TRANSIT_TO\022\021\n\ttimestamp\030\005 \001(\004\022K\n\020congest"
    "ion_level\030\006 \001(\01621.transit_realtime.Vehic"
    "lePosition.CongestionLevel\022K\n\020occupancy_"
    "status\030\t \001(\01621.transit_realtime.VehicleP"
    "osition.OccupancyStatus\"G\n\021VehicleStopSt"
    "atus\022\017\n\013INCOMING_AT\020\000\022\016\n\nSTOPPED_AT\020\001\022\021\n"
    "\rIN_TRANSIT_TO\020\002\"}\n\017CongestionLevel\022\034\n\030U"
    "NKNOWN_CONGESTION_LEVEL\020\000\022\024\n\020RUNNING_SMO"
    "OTHLY\020\001\022\017\n\013STOP_AND_GO\020\002\022\016\n\nCONGESTION\020\003"
    "\022\025\n\021SEVERE_CONGESTION\020\004\"\257\001\n\017OccupancySta"
    "tus\022\t\n\005EMPTY\020\000\022\030\n\024MANY_SEATS_AVAILABLE\020\001"
    "\022\027\n\023FEW_SEATS_AVAILABLE\020\002\022\026\n\022STANDING_RO"
    "OM_ONLY\020\003\022\036\n\032CRUSHED_STANDING_ROOM_ONLY\020"
    "\004\022\010\n\004FULL\020\005\022\034\n\030NOT_ACCEPTING_PASSENGERS\020"
    "\006*\n\010\350\007\020\320\017\032\002\030\001\"\272\006\n\005Alert\0222\n\ractive_period"
    "\030\001 \003(\0132\033.transit_realtime.TimeRange\0229\n\017i"
    "nformed_entity\030\005 \003(\0132 .transit_realtime."
    "EntitySelector\022;\n\005cause\030\006 \001(\0162\035.transit_"
    "realtime.Alert.Cause:\rUNKNOWN_CAUSE\022>\n\006e"
    "ffect\030\007 \001(\0162\036.transit_realtime.Alert.Eff"
    "ect:\016UNKNOWN_EFFECT\022/\n\003url\030\010 \001(\0132\".trans"
    "it_realtime.TranslatedString\0227\n\013header_t"
    "ext\030\n \001(\0132\".transit_realtime.TranslatedS"
    "tring\022<\n\020description_text\030\013 \001(\0132\".transi"
    "t_realtime.TranslatedString\"\330\001\n\005Cause\022\021\n"
    "\rUNKNOWN_CAUSE\020\001\022\017\n\013OTHER_CAUSE\020\002\022\025\n\021TEC"
    "HNICAL_PROBLEM\020\003\022\n\n\006STRIKE\020\004\022\021\n\rDEMONSTR"
    "ATION\020\005\022\014\n\010ACCIDENT\020\006\022\013\n\007HOLIDAY\020\007\022\013\n\007WE"
    "ATHER\020\010\022\017\n\013MAINTENANCE\020\t\022\020\n\014CONSTRUCTION"
    "\020\n\022\023\n\017POLICE_ACTIVITY\020\013\022\025\n\021MEDICAL_EMERG"
    "ENCY\020\014\"\265\001\n\006Effect\022\016\n\nNO_SERVICE\020\001\022\023\n\017RED"
    "UCED_SERVICE\020\002\022\026\n\022SIGNIFICANT_DELAYS\020\003\022\n"
    "\n\006DETOUR\020\004\022\026\n\022ADDITIONAL_SERVICE\020\005\022\024\n\020MO"
    "DIFIED_SERVICE\020\006\022\020\n\014OTHER_EFFECT\020\007\022\022\n\016UN"
    "KNOWN_EFFECT\020\010\022\016\n\nSTOP_MOVED\020\t*\n\010\350\007\020\320\017\032\002"
    "\030\001\"3\n\tTimeRange\022\r\n\005start\030\001 \001(\004\022\013\n\003end\030\002 "
    "\001(\004*\n\010\350\007\020\320\017\032\002\030\001\"m\n\010Position\022\020\n\010latitude\030"
    "\001 \002(\002\022\021\n\tlongitude\030\002 \002(\002\022\017\n\007bearing\030\003 \001("
    "\002\022\020\n\010odometer\030\004 \001(\001\022\r\n\005speed\030\005 \001(\002*\n\010\350\007\020"
    "\320\017\032\002\030\001\"\244\002\n\016TripDescriptor\022\017\n\007trip_id\030\001 \001"
    "(\t\022\020\n\010route_id\030\005 \001(\t\022\024\n\014direction_id\030\006 \001"
    "(\r\022\022\n\nstart_time\030\002 \001(\t\022\022\n\nstart_date\030\003 \001"
    "(\t\022T\n\025schedule_relationship\030\004 \001(\01625.tran"
    "sit_realtime.TripDescriptor.ScheduleRela"
    "tionship\"O\n\024ScheduleRelationship\022\r\n\tSCHE"
    "DULED\020\000\022\t\n\005ADDED\020\001\022\017\n\013UNSCHEDULED\020\002\022\014\n\010C"
    "ANCELED\020\003*\n\010\350\007\020\320\017\032\002\030\001\"Q\n\021VehicleDescript"
    "or\022\n\n\002id\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\025\n\rlicense"
    "_plate\030\003 \001(\t*\n\010\350\007\020\320\017\032\002\030\001\"\226\001\n\016EntitySelec"
    "tor\022\021\n\tagency_id\030\001 \001(\t\022\020\n\010route_id\030\002 \001(\t"
    "\022\022\n\nroute_type\030\003 \001(\005\022.\n\004trip\030\004 \001(\0132 .tra"
    "nsit_realtime.TripDescriptor\022\017\n\007stop_id\030"
    "\005 \001(\t*\n\010\350\007\020\320\017\032\002\030\001\"\236\001\n\020TranslatedString\022C"
    "\n\013translation\030\001 \003(\0132..transit_realtime.T"
    "ranslatedString.Translation\0329\n\013Translati"
    "on\022\014\n\004text\030\001 \002(\t\022\020\n\010language\030\002 \001(\t*\n\010\350\007\020"
    "\320\017\032\002\030\001*\n\010\350\007\020\320\017\032\002\030\001"
};
static ::absl::once_flag descriptor_table_gtfs_2drealtime_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_gtfs_2drealtime_2eproto = {
    false,
    false,
    3818,
    descriptor_table_protodef_gtfs_2drealtime_2eproto,
    "gtfs-realtime.proto",
    &descriptor_table_gtfs_2drealtime_2eproto_once,
    nullptr,
    0,
    15,
    schemas,
    file_default_instances,
    TableStruct_gtfs_2drealtime_2eproto::offsets,
    file_level_metadata_gtfs_2drealtime_2eproto,
    file_level_enum_descriptors_gtfs_2drealtime_2eproto,
    file_level_service_descriptors_gtfs_2drealtime_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_gtfs_2drealtime_2eproto_getter() {
  return &descriptor_table_gtfs_2drealtime_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_gtfs_2drealtime_2eproto(&descriptor_table_gtfs_2drealtime_2eproto);
namespace transit_realtime {
const ::google::protobuf::EnumDescriptor* FeedHeader_Incrementality_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t FeedHeader_Incrementality_internal_data_[] = {
    131072u, 0u, };
bool FeedHeader_Incrementality_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr FeedHeader_Incrementality FeedHeader::FULL_DATASET;
constexpr FeedHeader_Incrementality FeedHeader::DIFFERENTIAL;
constexpr FeedHeader_Incrementality FeedHeader::Incrementality_MIN;
constexpr FeedHeader_Incrementality FeedHeader::Incrementality_MAX;
constexpr int FeedHeader::Incrementality_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TripUpdate_StopTimeUpdate_ScheduleRelationship_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TripUpdate_StopTimeUpdate_ScheduleRelationship_internal_data_[] = {
    196608u, 0u, };
bool TripUpdate_StopTimeUpdate_ScheduleRelationship_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TripUpdate_StopTimeUpdate_ScheduleRelationship TripUpdate_StopTimeUpdate::SCHEDULED;
constexpr TripUpdate_StopTimeUpdate_ScheduleRelationship TripUpdate_StopTimeUpdate::SKIPPED;
constexpr TripUpdate_StopTimeUpdate_ScheduleRelationship TripUpdate_StopTimeUpdate::NO_DATA;
constexpr TripUpdate_StopTimeUpdate_ScheduleRelationship TripUpdate_StopTimeUpdate::ScheduleRelationship_MIN;
constexpr TripUpdate_StopTimeUpdate_ScheduleRelationship TripUpdate_StopTimeUpdate::ScheduleRelationship_MAX;
constexpr int TripUpdate_StopTimeUpdate::ScheduleRelationship_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VehiclePosition_VehicleStopStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t VehiclePosition_VehicleStopStatus_internal_data_[] = {
    196608u, 0u, };
bool VehiclePosition_VehicleStopStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VehiclePosition_VehicleStopStatus VehiclePosition::INCOMING_AT;
constexpr VehiclePosition_VehicleStopStatus VehiclePosition::STOPPED_AT;
constexpr VehiclePosition_VehicleStopStatus VehiclePosition::IN_TRANSIT_TO;
constexpr VehiclePosition_VehicleStopStatus VehiclePosition::VehicleStopStatus_MIN;
constexpr VehiclePosition_VehicleStopStatus VehiclePosition::VehicleStopStatus_MAX;
constexpr int VehiclePosition::VehicleStopStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VehiclePosition_CongestionLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t VehiclePosition_CongestionLevel_internal_data_[] = {
    327680u, 0u, };
bool VehiclePosition_CongestionLevel_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VehiclePosition_CongestionLevel VehiclePosition::UNKNOWN_CONGESTION_LEVEL;
constexpr VehiclePosition_CongestionLevel VehiclePosition::RUNNING_SMOOTHLY;
constexpr VehiclePosition_CongestionLevel VehiclePosition::STOP_AND_GO;
constexpr VehiclePosition_CongestionLevel VehiclePosition::CONGESTION;
constexpr VehiclePosition_CongestionLevel VehiclePosition::SEVERE_CONGESTION;
constexpr VehiclePosition_CongestionLevel VehiclePosition::CongestionLevel_MIN;
constexpr VehiclePosition_CongestionLevel VehiclePosition::CongestionLevel_MAX;
constexpr int VehiclePosition::CongestionLevel_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VehiclePosition_OccupancyStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t VehiclePosition_OccupancyStatus_internal_data_[] = {
    458752u, 0u, };
bool VehiclePosition_OccupancyStatus_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VehiclePosition_OccupancyStatus VehiclePosition::EMPTY;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::MANY_SEATS_AVAILABLE;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::FEW_SEATS_AVAILABLE;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::STANDING_ROOM_ONLY;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::CRUSHED_STANDING_ROOM_ONLY;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::FULL;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::NOT_ACCEPTING_PASSENGERS;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::OccupancyStatus_MIN;
constexpr VehiclePosition_OccupancyStatus VehiclePosition::OccupancyStatus_MAX;
constexpr int VehiclePosition::OccupancyStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Alert_Cause_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t Alert_Cause_internal_data_[] = {
    786433u, 0u, };
bool Alert_Cause_IsValid(int value) {
  return 1 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Alert_Cause Alert::UNKNOWN_CAUSE;
constexpr Alert_Cause Alert::OTHER_CAUSE;
constexpr Alert_Cause Alert::TECHNICAL_PROBLEM;
constexpr Alert_Cause Alert::STRIKE;
constexpr Alert_Cause Alert::DEMONSTRATION;
constexpr Alert_Cause Alert::ACCIDENT;
constexpr Alert_Cause Alert::HOLIDAY;
constexpr Alert_Cause Alert::WEATHER;
constexpr Alert_Cause Alert::MAINTENANCE;
constexpr Alert_Cause Alert::CONSTRUCTION;
constexpr Alert_Cause Alert::POLICE_ACTIVITY;
constexpr Alert_Cause Alert::MEDICAL_EMERGENCY;
constexpr Alert_Cause Alert::Cause_MIN;
constexpr Alert_Cause Alert::Cause_MAX;
constexpr int Alert::Cause_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Alert_Effect_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t Alert_Effect_internal_data_[] = {
    589825u, 0u, };
bool Alert_Effect_IsValid(int value) {
  return 1 <= value && value <= 9;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Alert_Effect Alert::NO_SERVICE;
constexpr Alert_Effect Alert::REDUCED_SERVICE;
constexpr Alert_Effect Alert::SIGNIFICANT_DELAYS;
constexpr Alert_Effect Alert::DETOUR;
constexpr Alert_Effect Alert::ADDITIONAL_SERVICE;
constexpr Alert_Effect Alert::MODIFIED_SERVICE;
constexpr Alert_Effect Alert::OTHER_EFFECT;
constexpr Alert_Effect Alert::UNKNOWN_EFFECT;
constexpr Alert_Effect Alert::STOP_MOVED;
constexpr Alert_Effect Alert::Effect_MIN;
constexpr Alert_Effect Alert::Effect_MAX;
constexpr int Alert::Effect_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TripDescriptor_ScheduleRelationship_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_gtfs_2drealtime_2eproto);
  return file_level_enum_descriptors_gtfs_2drealtime_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t TripDescriptor_ScheduleRelationship_internal_data_[] = {
    262144u, 0u, };
bool TripDescriptor_ScheduleRelationship_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TripDescriptor_ScheduleRelationship TripDescriptor::SCHEDULED;
constexpr TripDescriptor_ScheduleRelationship TripDescriptor::ADDED;
constexpr TripDescriptor_ScheduleRelationship TripDescriptor::UNSCHEDULED;
constexpr TripDescriptor_ScheduleRelationship TripDescriptor::CANCELED;
constexpr TripDescriptor_ScheduleRelationship TripDescriptor::ScheduleRelationship_MIN;
constexpr TripDescriptor_ScheduleRelationship TripDescriptor::ScheduleRelationship_MAX;
constexpr int TripDescriptor::ScheduleRelationship_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class FeedMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<FeedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_._has_bits_);
  static const ::transit_realtime::FeedHeader& header(const FeedMessage* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::transit_realtime::FeedHeader& FeedMessage::_Internal::header(const FeedMessage* msg) {
  return *msg->_impl_.header_;
}
FeedMessage::FeedMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.FeedMessage)
}
inline PROTOBUF_NDEBUG_INLINE FeedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_{visibility, arena, from.entity_} {}

FeedMessage::FeedMessage(
    ::google::protobuf::Arena* arena,
    const FeedMessage& from)
    : ::google::protobuf::Message(arena) {
  FeedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::transit_realtime::FeedHeader>(arena, *from._impl_.header_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:transit_realtime.FeedMessage)
}
inline PROTOBUF_NDEBUG_INLINE FeedMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        entity_{visibility, arena} {}

inline void FeedMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
FeedMessage::~FeedMessage() {
  // @@protoc_insertion_point(destructor:transit_realtime.FeedMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.header_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FeedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.FeedMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.entity_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> FeedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_._extensions_),
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FeedMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .transit_realtime.FeedEntity entity = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_.entity_)}},
    // required .transit_realtime.FeedHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .transit_realtime.FeedHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .transit_realtime.FeedEntity entity = 2;
    {PROTOBUF_FIELD_OFFSET(FeedMessage, _impl_.entity_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::FeedHeader>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::FeedEntity>()},
  }}, {{
  }},
};

::uint8_t* FeedMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.FeedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .transit_realtime.FeedHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // repeated .transit_realtime.FeedEntity entity = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entity_size()); i < n; i++) {
    const auto& repfield = this->_internal_entity().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.FeedMessage)
  return target;
}

::size_t FeedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.FeedMessage)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .transit_realtime.FeedEntity entity = 2;
  total_size += 1UL * this->_internal_entity_size();
  for (const auto& msg : this->_internal_entity()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required .transit_realtime.FeedHeader header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FeedMessage::_class_data_ = {
    FeedMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FeedMessage::GetClassData() const {
  return &_class_data_;
}

void FeedMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FeedMessage*>(&to_msg);
  auto& from = static_cast<const FeedMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.FeedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity()->MergeFrom(
      from._internal_entity());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_header()->::transit_realtime::FeedHeader::MergeFrom(
        from._internal_header());
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedMessage::CopyFrom(const FeedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.FeedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedMessage::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_entity()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.header_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* FeedMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FeedMessage::InternalSwap(FeedMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entity_.InternalSwap(&other->_impl_.entity_);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata FeedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[0]);
}
// ===================================================================

class FeedHeader::_Internal {
 public:
  using HasBits = decltype(std::declval<FeedHeader>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_._has_bits_);
  static void set_has_gtfs_realtime_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_incrementality(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

FeedHeader::FeedHeader(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.FeedHeader)
}
inline PROTOBUF_NDEBUG_INLINE FeedHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        gtfs_realtime_version_(arena, from.gtfs_realtime_version_) {}

FeedHeader::FeedHeader(
    ::google::protobuf::Arena* arena,
    const FeedHeader& from)
    : ::google::protobuf::Message(arena) {
  FeedHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, incrementality_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::incrementality_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.FeedHeader)
}
inline PROTOBUF_NDEBUG_INLINE FeedHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        gtfs_realtime_version_(arena) {}

inline void FeedHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, incrementality_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::incrementality_));
}
FeedHeader::~FeedHeader() {
  // @@protoc_insertion_point(destructor:transit_realtime.FeedHeader)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedHeader::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.gtfs_realtime_version_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FeedHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.FeedHeader)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.gtfs_realtime_version_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.incrementality_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.incrementality_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedHeader::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 57, 2> FeedHeader::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_._extensions_),
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FeedHeader_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string gtfs_realtime_version = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.gtfs_realtime_version_)}},
    // optional .transit_realtime.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];
    {::_pbi::TcParser::FastEr0S1,
     {16, 2, 1, PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.incrementality_)}},
    // optional uint64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FeedHeader, _impl_.timestamp_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string gtfs_realtime_version = 1;
    {PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.gtfs_realtime_version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .transit_realtime.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];
    {PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.incrementality_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {0, 2},
  }}, {{
    "\33\25\0\0\0\0\0\0"
    "transit_realtime.FeedHeader"
    "gtfs_realtime_version"
  }},
};

::uint8_t* FeedHeader::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.FeedHeader)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string gtfs_realtime_version = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_gtfs_realtime_version();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.FeedHeader.gtfs_realtime_version");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .transit_realtime.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_incrementality(), target);
  }

  // optional uint64 timestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_timestamp(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.FeedHeader)
  return target;
}

::size_t FeedHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.FeedHeader)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string gtfs_realtime_version = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gtfs_realtime_version());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional uint64 timestamp = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_timestamp());
    }

    // optional .transit_realtime.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_incrementality());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FeedHeader::_class_data_ = {
    FeedHeader::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FeedHeader::GetClassData() const {
  return &_class_data_;
}

void FeedHeader::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FeedHeader*>(&to_msg);
  auto& from = static_cast<const FeedHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.FeedHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_gtfs_realtime_version(from._internal_gtfs_realtime_version());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.incrementality_ = from._impl_.incrementality_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedHeader::CopyFrom(const FeedHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.FeedHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedHeader::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* FeedHeader::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FeedHeader::InternalSwap(FeedHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gtfs_realtime_version_, &other->_impl_.gtfs_realtime_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.incrementality_)
      + sizeof(FeedHeader::_impl_.incrementality_)
      - PROTOBUF_FIELD_OFFSET(FeedHeader, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata FeedHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[1]);
}
// ===================================================================

class FeedEntity::_Internal {
 public:
  using HasBits = decltype(std::declval<FeedEntity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_deleted(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::transit_realtime::TripUpdate& trip_update(const FeedEntity* msg);
  static void set_has_trip_update(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::transit_realtime::VehiclePosition& vehicle(const FeedEntity* msg);
  static void set_has_vehicle(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::transit_realtime::Alert& alert(const FeedEntity* msg);
  static void set_has_alert(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::transit_realtime::TripUpdate& FeedEntity::_Internal::trip_update(const FeedEntity* msg) {
  return *msg->_impl_.trip_update_;
}
const ::transit_realtime::VehiclePosition& FeedEntity::_Internal::vehicle(const FeedEntity* msg) {
  return *msg->_impl_.vehicle_;
}
const ::transit_realtime::Alert& FeedEntity::_Internal::alert(const FeedEntity* msg) {
  return *msg->_impl_.alert_;
}
FeedEntity::FeedEntity(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.FeedEntity)
}
inline PROTOBUF_NDEBUG_INLINE FeedEntity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

FeedEntity::FeedEntity(
    ::google::protobuf::Arena* arena,
    const FeedEntity& from)
    : ::google::protobuf::Message(arena) {
  FeedEntity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trip_update_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::transit_realtime::TripUpdate>(arena, *from._impl_.trip_update_)
                : nullptr;
  _impl_.vehicle_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::transit_realtime::VehiclePosition>(arena, *from._impl_.vehicle_)
                : nullptr;
  _impl_.alert_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::transit_realtime::Alert>(arena, *from._impl_.alert_)
                : nullptr;
  _impl_.is_deleted_ = from._impl_.is_deleted_;

  // @@protoc_insertion_point(copy_constructor:transit_realtime.FeedEntity)
}
inline PROTOBUF_NDEBUG_INLINE FeedEntity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        id_(arena) {}

inline void FeedEntity::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trip_update_),
           0,
           offsetof(Impl_, is_deleted_) -
               offsetof(Impl_, trip_update_) +
               sizeof(Impl_::is_deleted_));
}
FeedEntity::~FeedEntity() {
  // @@protoc_insertion_point(destructor:transit_realtime.FeedEntity)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FeedEntity::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  delete _impl_.trip_update_;
  delete _impl_.vehicle_;
  delete _impl_.alert_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FeedEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.FeedEntity)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.trip_update_ != nullptr);
      _impl_.trip_update_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.vehicle_ != nullptr);
      _impl_.vehicle_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.alert_ != nullptr);
      _impl_.alert_->Clear();
    }
  }
  _impl_.is_deleted_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FeedEntity::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 38, 2> FeedEntity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_._extensions_),
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FeedEntity_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.id_)}},
    // optional bool is_deleted = 2 [default = false];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FeedEntity, _impl_.is_deleted_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.is_deleted_)}},
    // optional .transit_realtime.TripUpdate trip_update = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.trip_update_)}},
    // optional .transit_realtime.VehiclePosition vehicle = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.vehicle_)}},
    // optional .transit_realtime.Alert alert = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 2, PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.alert_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool is_deleted = 2 [default = false];
    {PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.is_deleted_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .transit_realtime.TripUpdate trip_update = 3;
    {PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.trip_update_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.VehiclePosition vehicle = 4;
    {PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.vehicle_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.Alert alert = 5;
    {PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.alert_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TripUpdate>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::VehiclePosition>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::Alert>()},
  }}, {{
    "\33\2\0\0\0\0\0\0"
    "transit_realtime.FeedEntity"
    "id"
  }},
};

::uint8_t* FeedEntity::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.FeedEntity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.FeedEntity.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bool is_deleted = 2 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_deleted(), target);
  }

  // optional .transit_realtime.TripUpdate trip_update = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::trip_update(this),
        _Internal::trip_update(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.VehiclePosition vehicle = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::vehicle(this),
        _Internal::vehicle(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.Alert alert = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::alert(this),
        _Internal::alert(this).GetCachedSize(), target, stream);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.FeedEntity)
  return target;
}

::size_t FeedEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.FeedEntity)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x0000001eu) {
    // optional .transit_realtime.TripUpdate trip_update = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trip_update_);
    }

    // optional .transit_realtime.VehiclePosition vehicle = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vehicle_);
    }

    // optional .transit_realtime.Alert alert = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.alert_);
    }

    // optional bool is_deleted = 2 [default = false];
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FeedEntity::_class_data_ = {
    FeedEntity::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FeedEntity::GetClassData() const {
  return &_class_data_;
}

void FeedEntity::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FeedEntity*>(&to_msg);
  auto& from = static_cast<const FeedEntity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.FeedEntity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_trip_update()->::transit_realtime::TripUpdate::MergeFrom(
          from._internal_trip_update());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_vehicle()->::transit_realtime::VehiclePosition::MergeFrom(
          from._internal_vehicle());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_alert()->::transit_realtime::Alert::MergeFrom(
          from._internal_alert());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_deleted_ = from._impl_.is_deleted_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedEntity::CopyFrom(const FeedEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.FeedEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FeedEntity::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.trip_update_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.vehicle_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.alert_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* FeedEntity::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FeedEntity::InternalSwap(FeedEntity* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.is_deleted_)
      + sizeof(FeedEntity::_impl_.is_deleted_)
      - PROTOBUF_FIELD_OFFSET(FeedEntity, _impl_.trip_update_)>(
          reinterpret_cast<char*>(&_impl_.trip_update_),
          reinterpret_cast<char*>(&other->_impl_.trip_update_));
}

::google::protobuf::Metadata FeedEntity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[2]);
}
// ===================================================================

class TripUpdate_StopTimeEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<TripUpdate_StopTimeEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_._has_bits_);
  static void set_has_delay(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uncertainty(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

TripUpdate_StopTimeEvent::TripUpdate_StopTimeEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TripUpdate.StopTimeEvent)
}
inline PROTOBUF_NDEBUG_INLINE TripUpdate_StopTimeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TripUpdate_StopTimeEvent::TripUpdate_StopTimeEvent(
    ::google::protobuf::Arena* arena,
    const TripUpdate_StopTimeEvent& from)
    : ::google::protobuf::Message(arena) {
  TripUpdate_StopTimeEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_),
           offsetof(Impl_, uncertainty_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::uncertainty_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TripUpdate.StopTimeEvent)
}
inline PROTOBUF_NDEBUG_INLINE TripUpdate_StopTimeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void TripUpdate_StopTimeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, uncertainty_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::uncertainty_));
}
TripUpdate_StopTimeEvent::~TripUpdate_StopTimeEvent() {
  // @@protoc_insertion_point(destructor:transit_realtime.TripUpdate.StopTimeEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TripUpdate_StopTimeEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TripUpdate_StopTimeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TripUpdate.StopTimeEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.uncertainty_) -
        reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.uncertainty_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TripUpdate_StopTimeEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TripUpdate_StopTimeEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_._extensions_),
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TripUpdate_StopTimeEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 delay = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TripUpdate_StopTimeEvent, _impl_.delay_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.delay_)}},
    // optional int64 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TripUpdate_StopTimeEvent, _impl_.time_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.time_)}},
    // optional int32 uncertainty = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TripUpdate_StopTimeEvent, _impl_.uncertainty_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.uncertainty_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 delay = 1;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.delay_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 time = 2;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 uncertainty = 3;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.uncertainty_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TripUpdate_StopTimeEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TripUpdate.StopTimeEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 delay = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_delay(), target);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_time(), target);
  }

  // optional int32 uncertainty = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_uncertainty(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TripUpdate.StopTimeEvent)
  return target;
}

::size_t TripUpdate_StopTimeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TripUpdate.StopTimeEvent)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_time());
    }

    // optional int32 delay = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_delay());
    }

    // optional int32 uncertainty = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uncertainty());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TripUpdate_StopTimeEvent::_class_data_ = {
    TripUpdate_StopTimeEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TripUpdate_StopTimeEvent::GetClassData() const {
  return &_class_data_;
}

void TripUpdate_StopTimeEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TripUpdate_StopTimeEvent*>(&to_msg);
  auto& from = static_cast<const TripUpdate_StopTimeEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TripUpdate.StopTimeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.delay_ = from._impl_.delay_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.uncertainty_ = from._impl_.uncertainty_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TripUpdate_StopTimeEvent::CopyFrom(const TripUpdate_StopTimeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TripUpdate.StopTimeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TripUpdate_StopTimeEvent::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TripUpdate_StopTimeEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TripUpdate_StopTimeEvent::InternalSwap(TripUpdate_StopTimeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.uncertainty_)
      + sizeof(TripUpdate_StopTimeEvent::_impl_.uncertainty_)
      - PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeEvent, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata TripUpdate_StopTimeEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[3]);
}
// ===================================================================

class TripUpdate_StopTimeUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<TripUpdate_StopTimeUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_._has_bits_);
  static void set_has_stop_sequence(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stop_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::transit_realtime::TripUpdate_StopTimeEvent& arrival(const TripUpdate_StopTimeUpdate* msg);
  static void set_has_arrival(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::transit_realtime::TripUpdate_StopTimeEvent& departure(const TripUpdate_StopTimeUpdate* msg);
  static void set_has_departure(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_schedule_relationship(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::transit_realtime::TripUpdate_StopTimeEvent& TripUpdate_StopTimeUpdate::_Internal::arrival(const TripUpdate_StopTimeUpdate* msg) {
  return *msg->_impl_.arrival_;
}
const ::transit_realtime::TripUpdate_StopTimeEvent& TripUpdate_StopTimeUpdate::_Internal::departure(const TripUpdate_StopTimeUpdate* msg) {
  return *msg->_impl_.departure_;
}
TripUpdate_StopTimeUpdate::TripUpdate_StopTimeUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TripUpdate.StopTimeUpdate)
}
inline PROTOBUF_NDEBUG_INLINE TripUpdate_StopTimeUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        stop_id_(arena, from.stop_id_) {}

TripUpdate_StopTimeUpdate::TripUpdate_StopTimeUpdate(
    ::google::protobuf::Arena* arena,
    const TripUpdate_StopTimeUpdate& from)
    : ::google::protobuf::Message(arena) {
  TripUpdate_StopTimeUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.arrival_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::transit_realtime::TripUpdate_StopTimeEvent>(arena, *from._impl_.arrival_)
                : nullptr;
  _impl_.departure_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::transit_realtime::TripUpdate_StopTimeEvent>(arena, *from._impl_.departure_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stop_sequence_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, stop_sequence_),
           offsetof(Impl_, schedule_relationship_) -
               offsetof(Impl_, stop_sequence_) +
               sizeof(Impl_::schedule_relationship_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TripUpdate.StopTimeUpdate)
}
inline PROTOBUF_NDEBUG_INLINE TripUpdate_StopTimeUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        stop_id_(arena) {}

inline void TripUpdate_StopTimeUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, arrival_),
           0,
           offsetof(Impl_, schedule_relationship_) -
               offsetof(Impl_, arrival_) +
               sizeof(Impl_::schedule_relationship_));
}
TripUpdate_StopTimeUpdate::~TripUpdate_StopTimeUpdate() {
  // @@protoc_insertion_point(destructor:transit_realtime.TripUpdate.StopTimeUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TripUpdate_StopTimeUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.stop_id_.Destroy();
  delete _impl_.arrival_;
  delete _impl_.departure_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TripUpdate_StopTimeUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TripUpdate.StopTimeUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.stop_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.arrival_ != nullptr);
      _impl_.arrival_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.departure_ != nullptr);
      _impl_.departure_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.stop_sequence_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.schedule_relationship_) -
        reinterpret_cast<char*>(&_impl_.stop_sequence_)) + sizeof(_impl_.schedule_relationship_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TripUpdate_StopTimeUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 58, 2> TripUpdate_StopTimeUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_._extensions_),
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TripUpdate_StopTimeUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 stop_sequence = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TripUpdate_StopTimeUpdate, _impl_.stop_sequence_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.stop_sequence_)}},
    // optional .transit_realtime.TripUpdate.StopTimeEvent arrival = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.arrival_)}},
    // optional .transit_realtime.TripUpdate.StopTimeEvent departure = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.departure_)}},
    // optional string stop_id = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.stop_id_)}},
    // optional .transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];
    {::_pbi::TcParser::FastEr0S1,
     {40, 4, 2, PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.schedule_relationship_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 stop_sequence = 1;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.stop_sequence_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .transit_realtime.TripUpdate.StopTimeEvent arrival = 2;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.arrival_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.TripUpdate.StopTimeEvent departure = 3;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.departure_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string stop_id = 4;
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.stop_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];
    {PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.schedule_relationship_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TripUpdate_StopTimeEvent>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::TripUpdate_StopTimeEvent>()},
    {0, 3},
  }}, {{
    "\52\0\0\0\7\0\0\0"
    "transit_realtime.TripUpdate.StopTimeUpdate"
    "stop_id"
  }},
};

::uint8_t* TripUpdate_StopTimeUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TripUpdate.StopTimeUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 stop_sequence = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_stop_sequence(), target);
  }

  // optional .transit_realtime.TripUpdate.StopTimeEvent arrival = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::arrival(this),
        _Internal::arrival(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.TripUpdate.StopTimeEvent departure = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::departure(this),
        _Internal::departure(this).GetCachedSize(), target, stream);
  }

  // optional string stop_id = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_stop_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TripUpdate.StopTimeUpdate.stop_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional .transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_schedule_relationship(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TripUpdate.StopTimeUpdate)
  return target;
}

::size_t TripUpdate_StopTimeUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TripUpdate.StopTimeUpdate)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string stop_id = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stop_id());
    }

    // optional .transit_realtime.TripUpdate.StopTimeEvent arrival = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.arrival_);
    }

    // optional .transit_realtime.TripUpdate.StopTimeEvent departure = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.departure_);
    }

    // optional uint32 stop_sequence = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_stop_sequence());
    }

    // optional .transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_schedule_relationship());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TripUpdate_StopTimeUpdate::_class_data_ = {
    TripUpdate_StopTimeUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TripUpdate_StopTimeUpdate::GetClassData() const {
  return &_class_data_;
}

void TripUpdate_StopTimeUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TripUpdate_StopTimeUpdate*>(&to_msg);
  auto& from = static_cast<const TripUpdate_StopTimeUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TripUpdate.StopTimeUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_stop_id(from._internal_stop_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_arrival()->::transit_realtime::TripUpdate_StopTimeEvent::MergeFrom(
          from._internal_arrival());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_departure()->::transit_realtime::TripUpdate_StopTimeEvent::MergeFrom(
          from._internal_departure());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.stop_sequence_ = from._impl_.stop_sequence_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.schedule_relationship_ = from._impl_.schedule_relationship_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TripUpdate_StopTimeUpdate::CopyFrom(const TripUpdate_StopTimeUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TripUpdate.StopTimeUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TripUpdate_StopTimeUpdate::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.arrival_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.departure_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* TripUpdate_StopTimeUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TripUpdate_StopTimeUpdate::InternalSwap(TripUpdate_StopTimeUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stop_id_, &other->_impl_.stop_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.schedule_relationship_)
      + sizeof(TripUpdate_StopTimeUpdate::_impl_.schedule_relationship_)
      - PROTOBUF_FIELD_OFFSET(TripUpdate_StopTimeUpdate, _impl_.arrival_)>(
          reinterpret_cast<char*>(&_impl_.arrival_),
          reinterpret_cast<char*>(&other->_impl_.arrival_));
}

::google::protobuf::Metadata TripUpdate_StopTimeUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[4]);
}
// ===================================================================

class TripUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<TripUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_._has_bits_);
  static const ::transit_realtime::TripDescriptor& trip(const TripUpdate* msg);
  static void set_has_trip(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::transit_realtime::VehicleDescriptor& vehicle(const TripUpdate* msg);
  static void set_has_vehicle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_delay(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::transit_realtime::TripDescriptor& TripUpdate::_Internal::trip(const TripUpdate* msg) {
  return *msg->_impl_.trip_;
}
const ::transit_realtime::VehicleDescriptor& TripUpdate::_Internal::vehicle(const TripUpdate* msg) {
  return *msg->_impl_.vehicle_;
}
TripUpdate::TripUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TripUpdate)
}
inline PROTOBUF_NDEBUG_INLINE TripUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        stop_time_update_{visibility, arena, from.stop_time_update_} {}

TripUpdate::TripUpdate(
    ::google::protobuf::Arena* arena,
    const TripUpdate& from)
    : ::google::protobuf::Message(arena) {
  TripUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trip_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::transit_realtime::TripDescriptor>(arena, *from._impl_.trip_)
                : nullptr;
  _impl_.vehicle_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::transit_realtime::VehicleDescriptor>(arena, *from._impl_.vehicle_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, delay_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::delay_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TripUpdate)
}
inline PROTOBUF_NDEBUG_INLINE TripUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        stop_time_update_{visibility, arena} {}

inline void TripUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trip_),
           0,
           offsetof(Impl_, delay_) -
               offsetof(Impl_, trip_) +
               sizeof(Impl_::delay_));
}
TripUpdate::~TripUpdate() {
  // @@protoc_insertion_point(destructor:transit_realtime.TripUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TripUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.trip_;
  delete _impl_.vehicle_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TripUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TripUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.stop_time_update_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.trip_ != nullptr);
      _impl_.trip_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.vehicle_ != nullptr);
      _impl_.vehicle_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.delay_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.delay_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TripUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2> TripUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_._extensions_),
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TripUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .transit_realtime.TripDescriptor trip = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.trip_)}},
    // repeated .transit_realtime.TripUpdate.StopTimeUpdate stop_time_update = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.stop_time_update_)}},
    // optional .transit_realtime.VehicleDescriptor vehicle = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.vehicle_)}},
    // optional uint64 timestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TripUpdate, _impl_.timestamp_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.timestamp_)}},
    // optional int32 delay = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TripUpdate, _impl_.delay_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.delay_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .transit_realtime.TripDescriptor trip = 1;
    {PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.trip_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .transit_realtime.TripUpdate.StopTimeUpdate stop_time_update = 2;
    {PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.stop_time_update_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.VehicleDescriptor vehicle = 3;
    {PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.vehicle_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 delay = 5;
    {PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.delay_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TripDescriptor>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::TripUpdate_StopTimeUpdate>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::VehicleDescriptor>()},
  }}, {{
  }},
};

::uint8_t* TripUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TripUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .transit_realtime.TripDescriptor trip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::trip(this),
        _Internal::trip(this).GetCachedSize(), target, stream);
  }

  // repeated .transit_realtime.TripUpdate.StopTimeUpdate stop_time_update = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stop_time_update_size()); i < n; i++) {
    const auto& repfield = this->_internal_stop_time_update().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.VehicleDescriptor vehicle = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::vehicle(this),
        _Internal::vehicle(this).GetCachedSize(), target, stream);
  }

  // optional uint64 timestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_timestamp(), target);
  }

  // optional int32 delay = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_delay(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TripUpdate)
  return target;
}

::size_t TripUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TripUpdate)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .transit_realtime.TripUpdate.StopTimeUpdate stop_time_update = 2;
  total_size += 1UL * this->_internal_stop_time_update_size();
  for (const auto& msg : this->_internal_stop_time_update()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // required .transit_realtime.TripDescriptor trip = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trip_);
  }

  if (cached_has_bits & 0x0000000eu) {
    // optional .transit_realtime.VehicleDescriptor vehicle = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vehicle_);
    }

    // optional uint64 timestamp = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_timestamp());
    }

    // optional int32 delay = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_delay());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TripUpdate::_class_data_ = {
    TripUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TripUpdate::GetClassData() const {
  return &_class_data_;
}

void TripUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TripUpdate*>(&to_msg);
  auto& from = static_cast<const TripUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TripUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stop_time_update()->MergeFrom(
      from._internal_stop_time_update());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_trip()->::transit_realtime::TripDescriptor::MergeFrom(
          from._internal_trip());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_vehicle()->::transit_realtime::VehicleDescriptor::MergeFrom(
          from._internal_vehicle());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.delay_ = from._impl_.delay_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TripUpdate::CopyFrom(const TripUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TripUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TripUpdate::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_stop_time_update()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.trip_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.vehicle_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* TripUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TripUpdate::InternalSwap(TripUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stop_time_update_.InternalSwap(&other->_impl_.stop_time_update_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.delay_)
      + sizeof(TripUpdate::_impl_.delay_)
      - PROTOBUF_FIELD_OFFSET(TripUpdate, _impl_.trip_)>(
          reinterpret_cast<char*>(&_impl_.trip_),
          reinterpret_cast<char*>(&other->_impl_.trip_));
}

::google::protobuf::Metadata TripUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[5]);
}
// ===================================================================

class VehiclePosition::_Internal {
 public:
  using HasBits = decltype(std::declval<VehiclePosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_._has_bits_);
  static const ::transit_realtime::TripDescriptor& trip(const VehiclePosition* msg);
  static void set_has_trip(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::transit_realtime::VehicleDescriptor& vehicle(const VehiclePosition* msg);
  static void set_has_vehicle(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::transit_realtime::Position& position(const VehiclePosition* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_current_stop_sequence(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_stop_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_current_status(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_congestion_level(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_occupancy_status(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::transit_realtime::TripDescriptor& VehiclePosition::_Internal::trip(const VehiclePosition* msg) {
  return *msg->_impl_.trip_;
}
const ::transit_realtime::VehicleDescriptor& VehiclePosition::_Internal::vehicle(const VehiclePosition* msg) {
  return *msg->_impl_.vehicle_;
}
const ::transit_realtime::Position& VehiclePosition::_Internal::position(const VehiclePosition* msg) {
  return *msg->_impl_.position_;
}
VehiclePosition::VehiclePosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.VehiclePosition)
}
inline PROTOBUF_NDEBUG_INLINE VehiclePosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        stop_id_(arena, from.stop_id_) {}

VehiclePosition::VehiclePosition(
    ::google::protobuf::Arena* arena,
    const VehiclePosition& from)
    : ::google::protobuf::Message(arena) {
  VehiclePosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trip_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::transit_realtime::TripDescriptor>(arena, *from._impl_.trip_)
                : nullptr;
  _impl_.position_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::transit_realtime::Position>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.vehicle_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::transit_realtime::VehicleDescriptor>(arena, *from._impl_.vehicle_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_stop_sequence_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, current_stop_sequence_),
           offsetof(Impl_, current_status_) -
               offsetof(Impl_, current_stop_sequence_) +
               sizeof(Impl_::current_status_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.VehiclePosition)
}
inline PROTOBUF_NDEBUG_INLINE VehiclePosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        stop_id_(arena),
        current_status_{static_cast< ::transit_realtime::VehiclePosition_VehicleStopStatus >(2)} {}

inline void VehiclePosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trip_),
           0,
           offsetof(Impl_, occupancy_status_) -
               offsetof(Impl_, trip_) +
               sizeof(Impl_::occupancy_status_));
}
VehiclePosition::~VehiclePosition() {
  // @@protoc_insertion_point(destructor:transit_realtime.VehiclePosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehiclePosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.stop_id_.Destroy();
  delete _impl_.trip_;
  delete _impl_.position_;
  delete _impl_.vehicle_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehiclePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.VehiclePosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.stop_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.trip_ != nullptr);
      _impl_.trip_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.vehicle_ != nullptr);
      _impl_.vehicle_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.current_stop_sequence_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.occupancy_status_) -
        reinterpret_cast<char*>(&_impl_.current_stop_sequence_)) + sizeof(_impl_.occupancy_status_));
  }
  _impl_.current_status_ = 2;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehiclePosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 6, 56, 2> VehiclePosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_._extensions_),
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VehiclePosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .transit_realtime.TripDescriptor trip = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.trip_)}},
    // optional .transit_realtime.Position position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 1, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.position_)}},
    // optional uint32 current_stop_sequence = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VehiclePosition, _impl_.current_stop_sequence_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.current_stop_sequence_)}},
    // optional .transit_realtime.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];
    {::_pbi::TcParser::FastEr0S1,
     {32, 8, 2, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.current_status_)}},
    // optional uint64 timestamp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(VehiclePosition, _impl_.timestamp_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.timestamp_)}},
    // optional .transit_realtime.VehiclePosition.CongestionLevel congestion_level = 6;
    {::_pbi::TcParser::FastEr0S1,
     {48, 5, 4, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.congestion_level_)}},
    // optional string stop_id = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.stop_id_)}},
    // optional .transit_realtime.VehicleDescriptor vehicle = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 4, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.vehicle_)}},
    // optional .transit_realtime.VehiclePosition.OccupancyStatus occupancy_status = 9;
    {::_pbi::TcParser::FastEr0S1,
     {72, 7, 6, PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.occupancy_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .transit_realtime.TripDescriptor trip = 1;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.trip_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.Position position = 2;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.position_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 current_stop_sequence = 3;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.current_stop_sequence_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .transit_realtime.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.current_status_), _Internal::kHasBitsOffset + 8, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint64 timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.timestamp_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .transit_realtime.VehiclePosition.CongestionLevel congestion_level = 6;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.congestion_level_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string stop_id = 7;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.stop_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .transit_realtime.VehicleDescriptor vehicle = 8;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.vehicle_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.VehiclePosition.OccupancyStatus occupancy_status = 9;
    {PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.occupancy_status_), _Internal::kHasBitsOffset + 7, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TripDescriptor>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::Position>()},
    {0, 3},
    {0, 5},
    {::_pbi::TcParser::GetTable<::transit_realtime::VehicleDescriptor>()},
    {0, 7},
  }}, {{
    "\40\0\0\0\0\0\0\7\0\0\0\0\0\0\0\0"
    "transit_realtime.VehiclePosition"
    "stop_id"
  }},
};

::uint8_t* VehiclePosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.VehiclePosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .transit_realtime.TripDescriptor trip = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::trip(this),
        _Internal::trip(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.Position position = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional uint32 current_stop_sequence = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_current_stop_sequence(), target);
  }

  // optional .transit_realtime.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_current_status(), target);
  }

  // optional uint64 timestamp = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_timestamp(), target);
  }

  // optional .transit_realtime.VehiclePosition.CongestionLevel congestion_level = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_congestion_level(), target);
  }

  // optional string stop_id = 7;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_stop_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.VehiclePosition.stop_id");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional .transit_realtime.VehicleDescriptor vehicle = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::vehicle(this),
        _Internal::vehicle(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.VehiclePosition.OccupancyStatus occupancy_status = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_occupancy_status(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.VehiclePosition)
  return target;
}

::size_t VehiclePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.VehiclePosition)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string stop_id = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stop_id());
    }

    // optional .transit_realtime.TripDescriptor trip = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trip_);
    }

    // optional .transit_realtime.Position position = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // optional .transit_realtime.VehicleDescriptor vehicle = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vehicle_);
    }

    // optional uint32 current_stop_sequence = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_current_stop_sequence());
    }

    // optional .transit_realtime.VehiclePosition.CongestionLevel congestion_level = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_congestion_level());
    }

    // optional uint64 timestamp = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_timestamp());
    }

    // optional .transit_realtime.VehiclePosition.OccupancyStatus occupancy_status = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_occupancy_status());
    }

  }
  // optional .transit_realtime.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_current_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehiclePosition::_class_data_ = {
    VehiclePosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehiclePosition::GetClassData() const {
  return &_class_data_;
}

void VehiclePosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehiclePosition*>(&to_msg);
  auto& from = static_cast<const VehiclePosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.VehiclePosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_stop_id(from._internal_stop_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_trip()->::transit_realtime::TripDescriptor::MergeFrom(
          from._internal_trip());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_position()->::transit_realtime::Position::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_vehicle()->::transit_realtime::VehicleDescriptor::MergeFrom(
          from._internal_vehicle());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.current_stop_sequence_ = from._impl_.current_stop_sequence_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.congestion_level_ = from._impl_.congestion_level_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.occupancy_status_ = from._impl_.occupancy_status_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_current_status(from._internal_current_status());
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehiclePosition::CopyFrom(const VehiclePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.VehiclePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehiclePosition::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.trip_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.position_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.vehicle_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* VehiclePosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehiclePosition::InternalSwap(VehiclePosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stop_id_, &other->_impl_.stop_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.current_status_)
      + sizeof(VehiclePosition::_impl_.current_status_)
      - PROTOBUF_FIELD_OFFSET(VehiclePosition, _impl_.trip_)>(
          reinterpret_cast<char*>(&_impl_.trip_),
          reinterpret_cast<char*>(&other->_impl_.trip_));
}

::google::protobuf::Metadata VehiclePosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[6]);
}
// ===================================================================

class Alert::_Internal {
 public:
  using HasBits = decltype(std::declval<Alert>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Alert, _impl_._has_bits_);
  static void set_has_cause(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_effect(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::transit_realtime::TranslatedString& url(const Alert* msg);
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::transit_realtime::TranslatedString& header_text(const Alert* msg);
  static void set_has_header_text(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::transit_realtime::TranslatedString& description_text(const Alert* msg);
  static void set_has_description_text(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::transit_realtime::TranslatedString& Alert::_Internal::url(const Alert* msg) {
  return *msg->_impl_.url_;
}
const ::transit_realtime::TranslatedString& Alert::_Internal::header_text(const Alert* msg) {
  return *msg->_impl_.header_text_;
}
const ::transit_realtime::TranslatedString& Alert::_Internal::description_text(const Alert* msg) {
  return *msg->_impl_.description_text_;
}
Alert::Alert(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.Alert)
}
inline PROTOBUF_NDEBUG_INLINE Alert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        active_period_{visibility, arena, from.active_period_},
        informed_entity_{visibility, arena, from.informed_entity_} {}

Alert::Alert(
    ::google::protobuf::Arena* arena,
    const Alert& from)
    : ::google::protobuf::Message(arena) {
  Alert* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.url_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::transit_realtime::TranslatedString>(arena, *from._impl_.url_)
                : nullptr;
  _impl_.header_text_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::transit_realtime::TranslatedString>(arena, *from._impl_.header_text_)
                : nullptr;
  _impl_.description_text_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::transit_realtime::TranslatedString>(arena, *from._impl_.description_text_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cause_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cause_),
           offsetof(Impl_, effect_) -
               offsetof(Impl_, cause_) +
               sizeof(Impl_::effect_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.Alert)
}
inline PROTOBUF_NDEBUG_INLINE Alert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        active_period_{visibility, arena},
        informed_entity_{visibility, arena},
        cause_{static_cast< ::transit_realtime::Alert_Cause >(1)},
        effect_{static_cast< ::transit_realtime::Alert_Effect >(8)} {}

inline void Alert::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, url_),
           0,
           offsetof(Impl_, description_text_) -
               offsetof(Impl_, url_) +
               sizeof(Impl_::description_text_));
}
Alert::~Alert() {
  // @@protoc_insertion_point(destructor:transit_realtime.Alert)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Alert::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.url_;
  delete _impl_.header_text_;
  delete _impl_.description_text_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Alert::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.Alert)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.active_period_.Clear();
  _impl_.informed_entity_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.url_ != nullptr);
      _impl_.url_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.header_text_ != nullptr);
      _impl_.header_text_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.description_text_ != nullptr);
      _impl_.description_text_->Clear();
    }
    _impl_.cause_ = 1;
    _impl_.effect_ = 8;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Alert::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 7, 0, 2> Alert::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Alert, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(Alert, _impl_._extensions_),
    11, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965518,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Alert_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .transit_realtime.TranslatedString url = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 4, PROTOBUF_FIELD_OFFSET(Alert, _impl_.url_)}},
    // repeated .transit_realtime.TimeRange active_period = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.active_period_)}},
    // optional .transit_realtime.TranslatedString header_text = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 1, 5, PROTOBUF_FIELD_OFFSET(Alert, _impl_.header_text_)}},
    // optional .transit_realtime.TranslatedString description_text = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 6, PROTOBUF_FIELD_OFFSET(Alert, _impl_.description_text_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .transit_realtime.EntitySelector informed_entity = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Alert, _impl_.informed_entity_)}},
    // optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];
    {::_pbi::TcParser::FastEr1S1,
     {48, 3, 12, PROTOBUF_FIELD_OFFSET(Alert, _impl_.cause_)}},
    // optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];
    {::_pbi::TcParser::FastEr1S1,
     {56, 4, 9, PROTOBUF_FIELD_OFFSET(Alert, _impl_.effect_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .transit_realtime.TimeRange active_period = 1;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.active_period_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .transit_realtime.EntitySelector informed_entity = 5;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.informed_entity_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.cause_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.effect_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .transit_realtime.TranslatedString url = 8;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.url_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.TranslatedString header_text = 10;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.header_text_), _Internal::kHasBitsOffset + 1, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .transit_realtime.TranslatedString description_text = 11;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.description_text_), _Internal::kHasBitsOffset + 2, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TimeRange>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::EntitySelector>()},
    {1, 12},
    {1, 9},
    {::_pbi::TcParser::GetTable<::transit_realtime::TranslatedString>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::TranslatedString>()},
    {::_pbi::TcParser::GetTable<::transit_realtime::TranslatedString>()},
  }}, {{
  }},
};

::uint8_t* Alert::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.Alert)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .transit_realtime.TimeRange active_period = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_active_period_size()); i < n; i++) {
    const auto& repfield = this->_internal_active_period().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .transit_realtime.EntitySelector informed_entity = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_informed_entity_size()); i < n; i++) {
    const auto& repfield = this->_internal_informed_entity().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_cause(), target);
  }

  // optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_effect(), target);
  }

  // optional .transit_realtime.TranslatedString url = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::url(this),
        _Internal::url(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.TranslatedString header_text = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::header_text(this),
        _Internal::header_text(this).GetCachedSize(), target, stream);
  }

  // optional .transit_realtime.TranslatedString description_text = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::description_text(this),
        _Internal::description_text(this).GetCachedSize(), target, stream);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.Alert)
  return target;
}

::size_t Alert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.Alert)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .transit_realtime.TimeRange active_period = 1;
  total_size += 1UL * this->_internal_active_period_size();
  for (const auto& msg : this->_internal_active_period()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .transit_realtime.EntitySelector informed_entity = 5;
  total_size += 1UL * this->_internal_informed_entity_size();
  for (const auto& msg : this->_internal_informed_entity()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .transit_realtime.TranslatedString url = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.url_);
    }

    // optional .transit_realtime.TranslatedString header_text = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.header_text_);
    }

    // optional .transit_realtime.TranslatedString description_text = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.description_text_);
    }

    // optional .transit_realtime.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_cause());
    }

    // optional .transit_realtime.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_effect());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Alert::_class_data_ = {
    Alert::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Alert::GetClassData() const {
  return &_class_data_;
}

void Alert::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Alert*>(&to_msg);
  auto& from = static_cast<const Alert&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.Alert)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_active_period()->MergeFrom(
      from._internal_active_period());
  _this->_internal_mutable_informed_entity()->MergeFrom(
      from._internal_informed_entity());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_url()->::transit_realtime::TranslatedString::MergeFrom(
          from._internal_url());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_header_text()->::transit_realtime::TranslatedString::MergeFrom(
          from._internal_header_text());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_description_text()->::transit_realtime::TranslatedString::MergeFrom(
          from._internal_description_text());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.cause_ = from._impl_.cause_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.effect_ = from._impl_.effect_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Alert::CopyFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.Alert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Alert::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_active_period()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_informed_entity()))
    return false;
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.url_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.header_text_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.description_text_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* Alert::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Alert::InternalSwap(Alert* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.active_period_.InternalSwap(&other->_impl_.active_period_);
  _impl_.informed_entity_.InternalSwap(&other->_impl_.informed_entity_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Alert, _impl_.effect_)
      + sizeof(Alert::_impl_.effect_)
      - PROTOBUF_FIELD_OFFSET(Alert, _impl_.url_)>(
          reinterpret_cast<char*>(&_impl_.url_),
          reinterpret_cast<char*>(&other->_impl_.url_));
}

::google::protobuf::Metadata Alert::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[7]);
}
// ===================================================================

class TimeRange::_Internal {
 public:
  using HasBits = decltype(std::declval<TimeRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._has_bits_);
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

TimeRange::TimeRange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TimeRange)
}
inline PROTOBUF_NDEBUG_INLINE TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TimeRange::TimeRange(
    ::google::protobuf::Arena* arena,
    const TimeRange& from)
    : ::google::protobuf::Message(arena) {
  TimeRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_),
           offsetof(Impl_, end_) -
               offsetof(Impl_, start_) +
               sizeof(Impl_::end_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TimeRange)
}
inline PROTOBUF_NDEBUG_INLINE TimeRange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void TimeRange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_),
           0,
           offsetof(Impl_, end_) -
               offsetof(Impl_, start_) +
               sizeof(Impl_::end_));
}
TimeRange::~TimeRange() {
  // @@protoc_insertion_point(destructor:transit_realtime.TimeRange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeRange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TimeRange)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.start_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_) -
        reinterpret_cast<char*>(&_impl_.start_)) + sizeof(_impl_.end_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TimeRange::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TimeRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._extensions_),
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TimeRange_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint64 end = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.end_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_)}},
    // optional uint64 start = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.start_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 start = 1;
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 end = 2;
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TimeRange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TimeRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_start(), target);
  }

  // optional uint64 end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_end(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TimeRange)
  return target;
}

::size_t TimeRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TimeRange)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 start = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_start());
    }

    // optional uint64 end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_end());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TimeRange::_class_data_ = {
    TimeRange::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TimeRange::GetClassData() const {
  return &_class_data_;
}

void TimeRange::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TimeRange*>(&to_msg);
  auto& from = static_cast<const TimeRange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.start_ = from._impl_.start_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.end_ = from._impl_.end_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeRange::CopyFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TimeRange::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TimeRange::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TimeRange::InternalSwap(TimeRange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_)
      + sizeof(TimeRange::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata TimeRange::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[8]);
}
// ===================================================================

class Position::_Internal {
 public:
  using HasBits = decltype(std::declval<Position>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_);
  static void set_has_latitude(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_longitude(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bearing(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_odometer(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Position::Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.Position)
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Position::Position(
    ::google::protobuf::Arena* arena,
    const Position& from)
    : ::google::protobuf::Message(arena) {
  Position* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, latitude_),
           offsetof(Impl_, speed_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::speed_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.Position)
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           0,
           offsetof(Impl_, speed_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::speed_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:transit_realtime.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.Position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.latitude_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_) -
        reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Position::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Position::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(Position, _impl_._extensions_),
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Position_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required float latitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_)}},
    // required float longitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_)}},
    // optional float bearing = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.bearing_)}},
    // optional double odometer = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.odometer_)}},
    // optional float speed = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.speed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required float latitude = 1;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // required float longitude = 2;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float bearing = 3;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.bearing_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional double odometer = 4;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.odometer_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional float speed = 5;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.speed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required float latitude = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_latitude(), target);
  }

  // required float longitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_longitude(), target);
  }

  // optional float bearing = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_bearing(), target);
  }

  // optional double odometer = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_odometer(), target);
  }

  // optional float speed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_speed(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.Position)
  return target;
}

::size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.Position)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required float latitude = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // required float longitude = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  if (cached_has_bits & 0x0000001cu) {
    // optional double odometer = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional float bearing = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float speed = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Position::_class_data_ = {
    Position::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Position::GetClassData() const {
  return &_class_data_;
}

void Position::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.latitude_ = from._impl_.latitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.longitude_ = from._impl_.longitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.odometer_ = from._impl_.odometer_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.bearing_ = from._impl_.bearing_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Position::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* Position::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.speed_)
      + sizeof(Position::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[9]);
}
// ===================================================================

class TripDescriptor::_Internal {
 public:
  using HasBits = decltype(std::declval<TripDescriptor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_._has_bits_);
  static void set_has_trip_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_route_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_direction_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_start_date(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_schedule_relationship(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

TripDescriptor::TripDescriptor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TripDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE TripDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        trip_id_(arena, from.trip_id_),
        start_time_(arena, from.start_time_),
        start_date_(arena, from.start_date_),
        route_id_(arena, from.route_id_) {}

TripDescriptor::TripDescriptor(
    ::google::protobuf::Arena* arena,
    const TripDescriptor& from)
    : ::google::protobuf::Message(arena) {
  TripDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, schedule_relationship_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, schedule_relationship_),
           offsetof(Impl_, direction_id_) -
               offsetof(Impl_, schedule_relationship_) +
               sizeof(Impl_::direction_id_));

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TripDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE TripDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        trip_id_(arena),
        start_time_(arena),
        start_date_(arena),
        route_id_(arena) {}

inline void TripDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, schedule_relationship_),
           0,
           offsetof(Impl_, direction_id_) -
               offsetof(Impl_, schedule_relationship_) +
               sizeof(Impl_::direction_id_));
}
TripDescriptor::~TripDescriptor() {
  // @@protoc_insertion_point(destructor:transit_realtime.TripDescriptor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TripDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trip_id_.Destroy();
  _impl_.start_time_.Destroy();
  _impl_.start_date_.Destroy();
  _impl_.route_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TripDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TripDescriptor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.trip_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.start_time_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.start_date_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.route_id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.schedule_relationship_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.direction_id_) -
        reinterpret_cast<char*>(&_impl_.schedule_relationship_)) + sizeof(_impl_.direction_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TripDescriptor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 75, 2> TripDescriptor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_._extensions_),
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TripDescriptor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string trip_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.trip_id_)}},
    // optional string start_time = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.start_time_)}},
    // optional string start_date = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.start_date_)}},
    // optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 4, 3, PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.schedule_relationship_)}},
    // optional string route_id = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.route_id_)}},
    // optional uint32 direction_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TripDescriptor, _impl_.direction_id_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.direction_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string trip_id = 1;
    {PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.trip_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string start_time = 2;
    {PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.start_time_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string start_date = 3;
    {PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.start_date_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;
    {PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.schedule_relationship_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string route_id = 5;
    {PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.route_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 direction_id = 6;
    {PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.direction_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {0, 4},
  }}, {{
    "\37\7\12\12\0\10\0\0"
    "transit_realtime.TripDescriptor"
    "trip_id"
    "start_time"
    "start_date"
    "route_id"
  }},
};

::uint8_t* TripDescriptor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TripDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string trip_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_trip_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TripDescriptor.trip_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string start_time = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_start_time();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TripDescriptor.start_time");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string start_date = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_start_date();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TripDescriptor.start_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_schedule_relationship(), target);
  }

  // optional string route_id = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_route_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TripDescriptor.route_id");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional uint32 direction_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_direction_id(), target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TripDescriptor)
  return target;
}

::size_t TripDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TripDescriptor)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string trip_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_trip_id());
    }

    // optional string start_time = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_start_time());
    }

    // optional string start_date = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_start_date());
    }

    // optional string route_id = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_route_id());
    }

    // optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_schedule_relationship());
    }

    // optional uint32 direction_id = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_direction_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TripDescriptor::_class_data_ = {
    TripDescriptor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TripDescriptor::GetClassData() const {
  return &_class_data_;
}

void TripDescriptor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TripDescriptor*>(&to_msg);
  auto& from = static_cast<const TripDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TripDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_trip_id(from._internal_trip_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_start_time(from._internal_start_time());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_start_date(from._internal_start_date());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_route_id(from._internal_route_id());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.schedule_relationship_ = from._impl_.schedule_relationship_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.direction_id_ = from._impl_.direction_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TripDescriptor::CopyFrom(const TripDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TripDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TripDescriptor::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TripDescriptor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TripDescriptor::InternalSwap(TripDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trip_id_, &other->_impl_.trip_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_time_, &other->_impl_.start_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_date_, &other->_impl_.start_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.route_id_, &other->_impl_.route_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.direction_id_)
      + sizeof(TripDescriptor::_impl_.direction_id_)
      - PROTOBUF_FIELD_OFFSET(TripDescriptor, _impl_.schedule_relationship_)>(
          reinterpret_cast<char*>(&_impl_.schedule_relationship_),
          reinterpret_cast<char*>(&other->_impl_.schedule_relationship_));
}

::google::protobuf::Metadata TripDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[10]);
}
// ===================================================================

class VehicleDescriptor::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleDescriptor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_license_plate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

VehicleDescriptor::VehicleDescriptor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.VehicleDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE VehicleDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        label_(arena, from.label_),
        license_plate_(arena, from.license_plate_) {}

VehicleDescriptor::VehicleDescriptor(
    ::google::protobuf::Arena* arena,
    const VehicleDescriptor& from)
    : ::google::protobuf::Message(arena) {
  VehicleDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:transit_realtime.VehicleDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE VehicleDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        id_(arena),
        label_(arena),
        license_plate_(arena) {}

inline void VehicleDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VehicleDescriptor::~VehicleDescriptor() {
  // @@protoc_insertion_point(destructor:transit_realtime.VehicleDescriptor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.label_.Destroy();
  _impl_.license_plate_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VehicleDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.VehicleDescriptor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.label_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.license_plate_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VehicleDescriptor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> VehicleDescriptor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_._extensions_),
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VehicleDescriptor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_.id_)}},
    // optional string label = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_.label_)}},
    // optional string license_plate = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_.license_plate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string id = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string label = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_.label_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string license_plate = 3;
    {PROTOBUF_FIELD_OFFSET(VehicleDescriptor, _impl_.license_plate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\2\5\15\0\0\0\0"
    "transit_realtime.VehicleDescriptor"
    "id"
    "label"
    "license_plate"
  }},
};

::uint8_t* VehicleDescriptor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.VehicleDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.VehicleDescriptor.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string label = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_label();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.VehicleDescriptor.label");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string license_plate = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_license_plate();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.VehicleDescriptor.license_plate");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.VehicleDescriptor)
  return target;
}

::size_t VehicleDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.VehicleDescriptor)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // optional string label = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_label());
    }

    // optional string license_plate = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_license_plate());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VehicleDescriptor::_class_data_ = {
    VehicleDescriptor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VehicleDescriptor::GetClassData() const {
  return &_class_data_;
}

void VehicleDescriptor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VehicleDescriptor*>(&to_msg);
  auto& from = static_cast<const VehicleDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.VehicleDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_label(from._internal_label());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_license_plate(from._internal_license_plate());
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleDescriptor::CopyFrom(const VehicleDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.VehicleDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VehicleDescriptor::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* VehicleDescriptor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VehicleDescriptor::InternalSwap(VehicleDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_plate_, &other->_impl_.license_plate_, arena);
}

::google::protobuf::Metadata VehicleDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[11]);
}
// ===================================================================

class EntitySelector::_Internal {
 public:
  using HasBits = decltype(std::declval<EntitySelector>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_._has_bits_);
  static void set_has_agency_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_route_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_route_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::transit_realtime::TripDescriptor& trip(const EntitySelector* msg);
  static void set_has_trip(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stop_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::transit_realtime::TripDescriptor& EntitySelector::_Internal::trip(const EntitySelector* msg) {
  return *msg->_impl_.trip_;
}
EntitySelector::EntitySelector(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.EntitySelector)
}
inline PROTOBUF_NDEBUG_INLINE EntitySelector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        agency_id_(arena, from.agency_id_),
        route_id_(arena, from.route_id_),
        stop_id_(arena, from.stop_id_) {}

EntitySelector::EntitySelector(
    ::google::protobuf::Arena* arena,
    const EntitySelector& from)
    : ::google::protobuf::Message(arena) {
  EntitySelector* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trip_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::transit_realtime::TripDescriptor>(arena, *from._impl_.trip_)
                : nullptr;
  _impl_.route_type_ = from._impl_.route_type_;

  // @@protoc_insertion_point(copy_constructor:transit_realtime.EntitySelector)
}
inline PROTOBUF_NDEBUG_INLINE EntitySelector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        agency_id_(arena),
        route_id_(arena),
        stop_id_(arena) {}

inline void EntitySelector::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trip_),
           0,
           offsetof(Impl_, route_type_) -
               offsetof(Impl_, trip_) +
               sizeof(Impl_::route_type_));
}
EntitySelector::~EntitySelector() {
  // @@protoc_insertion_point(destructor:transit_realtime.EntitySelector)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EntitySelector::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.agency_id_.Destroy();
  _impl_.route_id_.Destroy();
  _impl_.stop_id_.Destroy();
  delete _impl_.trip_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EntitySelector::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.EntitySelector)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.agency_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.route_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.stop_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.trip_ != nullptr);
      _impl_.trip_->Clear();
    }
  }
  _impl_.route_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EntitySelector::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 64, 2> EntitySelector::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_._extensions_),
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EntitySelector_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string agency_id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.agency_id_)}},
    // optional string route_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.route_id_)}},
    // optional int32 route_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EntitySelector, _impl_.route_type_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.route_type_)}},
    // optional .transit_realtime.TripDescriptor trip = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.trip_)}},
    // optional string stop_id = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.stop_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string agency_id = 1;
    {PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.agency_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string route_id = 2;
    {PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.route_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 route_type = 3;
    {PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.route_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .transit_realtime.TripDescriptor trip = 4;
    {PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.trip_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string stop_id = 5;
    {PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.stop_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TripDescriptor>()},
  }}, {{
    "\37\11\10\0\0\7\0\0"
    "transit_realtime.EntitySelector"
    "agency_id"
    "route_id"
    "stop_id"
  }},
};

::uint8_t* EntitySelector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.EntitySelector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string agency_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_agency_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.EntitySelector.agency_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string route_id = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_route_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.EntitySelector.route_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 route_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_route_type(), target);
  }

  // optional .transit_realtime.TripDescriptor trip = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::trip(this),
        _Internal::trip(this).GetCachedSize(), target, stream);
  }

  // optional string stop_id = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_stop_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.EntitySelector.stop_id");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.EntitySelector)
  return target;
}

::size_t EntitySelector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.EntitySelector)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string agency_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_agency_id());
    }

    // optional string route_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_route_id());
    }

    // optional string stop_id = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stop_id());
    }

    // optional .transit_realtime.TripDescriptor trip = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trip_);
    }

    // optional int32 route_type = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_route_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EntitySelector::_class_data_ = {
    EntitySelector::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EntitySelector::GetClassData() const {
  return &_class_data_;
}

void EntitySelector::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EntitySelector*>(&to_msg);
  auto& from = static_cast<const EntitySelector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.EntitySelector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_agency_id(from._internal_agency_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_route_id(from._internal_route_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_stop_id(from._internal_stop_id());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_trip()->::transit_realtime::TripDescriptor::MergeFrom(
          from._internal_trip());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.route_type_ = from._impl_.route_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntitySelector::CopyFrom(const EntitySelector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.EntitySelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EntitySelector::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.trip_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* EntitySelector::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EntitySelector::InternalSwap(EntitySelector* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agency_id_, &other->_impl_.agency_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.route_id_, &other->_impl_.route_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stop_id_, &other->_impl_.stop_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.route_type_)
      + sizeof(EntitySelector::_impl_.route_type_)
      - PROTOBUF_FIELD_OFFSET(EntitySelector, _impl_.trip_)>(
          reinterpret_cast<char*>(&_impl_.trip_),
          reinterpret_cast<char*>(&other->_impl_.trip_));
}

::google::protobuf::Metadata EntitySelector::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[12]);
}
// ===================================================================

class TranslatedString_Translation::_Internal {
 public:
  using HasBits = decltype(std::declval<TranslatedString_Translation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_._has_bits_);
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

TranslatedString_Translation::TranslatedString_Translation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TranslatedString.Translation)
}
inline PROTOBUF_NDEBUG_INLINE TranslatedString_Translation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_),
        language_(arena, from.language_) {}

TranslatedString_Translation::TranslatedString_Translation(
    ::google::protobuf::Arena* arena,
    const TranslatedString_Translation& from)
    : ::google::protobuf::Message(arena) {
  TranslatedString_Translation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TranslatedString.Translation)
}
inline PROTOBUF_NDEBUG_INLINE TranslatedString_Translation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        _cached_size_{0},
        text_(arena),
        language_(arena) {}

inline void TranslatedString_Translation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TranslatedString_Translation::~TranslatedString_Translation() {
  // @@protoc_insertion_point(destructor:transit_realtime.TranslatedString.Translation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TranslatedString_Translation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.language_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TranslatedString_Translation::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TranslatedString.Translation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.language_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TranslatedString_Translation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> TranslatedString_Translation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_._extensions_),
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TranslatedString_Translation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string language = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_.language_)}},
    // required string text = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string text = 1;
    {PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string language = 2;
    {PROTOBUF_FIELD_OFFSET(TranslatedString_Translation, _impl_.language_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\4\10\0\0\0\0\0"
    "transit_realtime.TranslatedString.Translation"
    "text"
    "language"
  }},
};

::uint8_t* TranslatedString_Translation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TranslatedString.Translation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string text = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TranslatedString.Translation.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string language = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_language();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "transit_realtime.TranslatedString.Translation.language");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TranslatedString.Translation)
  return target;
}

::size_t TranslatedString_Translation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TranslatedString.Translation)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string text = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  // optional string language = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TranslatedString_Translation::_class_data_ = {
    TranslatedString_Translation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TranslatedString_Translation::GetClassData() const {
  return &_class_data_;
}

void TranslatedString_Translation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TranslatedString_Translation*>(&to_msg);
  auto& from = static_cast<const TranslatedString_Translation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TranslatedString.Translation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_language(from._internal_language());
    }
  }
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TranslatedString_Translation::CopyFrom(const TranslatedString_Translation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TranslatedString.Translation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TranslatedString_Translation::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TranslatedString_Translation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TranslatedString_Translation::InternalSwap(TranslatedString_Translation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_, &other->_impl_.language_, arena);
}

::google::protobuf::Metadata TranslatedString_Translation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[13]);
}
// ===================================================================

class TranslatedString::_Internal {
 public:
};

TranslatedString::TranslatedString(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transit_realtime.TranslatedString)
}
inline PROTOBUF_NDEBUG_INLINE TranslatedString::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _extensions_{visibility, arena},
        translation_{visibility, arena, from.translation_},
        _cached_size_{0} {}

TranslatedString::TranslatedString(
    ::google::protobuf::Arena* arena,
    const TranslatedString& from)
    : ::google::protobuf::Message(arena) {
  TranslatedString* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_._extensions_.MergeFrom(this, from._impl_._extensions_);

  // @@protoc_insertion_point(copy_constructor:transit_realtime.TranslatedString)
}
inline PROTOBUF_NDEBUG_INLINE TranslatedString::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _extensions_{visibility, arena},
        translation_{visibility, arena},
        _cached_size_{0} {}

inline void TranslatedString::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TranslatedString::~TranslatedString() {
  // @@protoc_insertion_point(destructor:transit_realtime.TranslatedString)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TranslatedString::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TranslatedString::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.TranslatedString)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._extensions_.Clear();
  _impl_.translation_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TranslatedString::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TranslatedString::_table_ = {
  {
    0,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(TranslatedString, _impl_._extensions_),
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TranslatedString_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .transit_realtime.TranslatedString.Translation translation = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TranslatedString, _impl_.translation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .transit_realtime.TranslatedString.Translation translation = 1;
    {PROTOBUF_FIELD_OFFSET(TranslatedString, _impl_.translation_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transit_realtime::TranslatedString_Translation>()},
  }}, {{
  }},
};

::uint8_t* TranslatedString::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.TranslatedString)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .transit_realtime.TranslatedString.Translation translation = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_translation_size()); i < n; i++) {
    const auto& repfield = this->_internal_translation().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // Extension range [1000, 2000)
  target = _impl_._extensions_._InternalSerialize(
      internal_default_instance(), 1000, 2000, target, stream);
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.TranslatedString)
  return target;
}

::size_t TranslatedString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.TranslatedString)
  ::size_t total_size = 0;

  total_size += _impl_._extensions_.ByteSize();

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .transit_realtime.TranslatedString.Translation translation = 1;
  total_size += 1UL * this->_internal_translation_size();
  for (const auto& msg : this->_internal_translation()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TranslatedString::_class_data_ = {
    TranslatedString::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TranslatedString::GetClassData() const {
  return &_class_data_;
}

void TranslatedString::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TranslatedString*>(&to_msg);
  auto& from = static_cast<const TranslatedString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.TranslatedString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_translation()->MergeFrom(
      from._internal_translation());
  _this->_impl_._extensions_.MergeFrom(internal_default_instance(), from._impl_._extensions_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TranslatedString::CopyFrom(const TranslatedString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.TranslatedString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TranslatedString::IsInitialized() const {
  if (!_impl_._extensions_.IsInitialized(internal_default_instance())) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_translation()))
    return false;
  return true;
}

::_pbi::CachedSize* TranslatedString::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TranslatedString::InternalSwap(TranslatedString* PROTOBUF_RESTRICT other) {
  using std::swap;
  _impl_._extensions_.InternalSwap(&other->_impl_._extensions_);
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.translation_.InternalSwap(&other->_impl_.translation_);
}

::google::protobuf::Metadata TranslatedString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gtfs_2drealtime_2eproto_getter, &descriptor_table_gtfs_2drealtime_2eproto_once,
      file_level_metadata_gtfs_2drealtime_2eproto[14]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace transit_realtime
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
